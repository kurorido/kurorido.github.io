<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | Roliroli's Blog - Creative thinking is useless unless you know how to sell it]]></title>
  <link href="http://kurorido.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://kurorido.github.io/"/>
  <updated>2016-03-23T04:04:19+08:00</updated>
  <id>http://kurorido.github.io/</id>
  <author>
    <name><![CDATA[kuroridoplayer@gmail.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android Animation]]></title>
    <link href="http://kurorido.github.io/blog/2016/03/23/android-animation/"/>
    <updated>2016-03-23T02:30:53+08:00</updated>
    <id>http://kurorido.github.io/blog/2016/03/23/android-animation</id>
    <content type="html"><![CDATA[<p>Android 主要有兩種 Animation System，這篇文章專注在介紹較新的 Property Animation</p>

<h2>Overview</h2>

<blockquote><p>Android framework provides two animation systems: property animation (introduced in Android 3.0) and view animation.</p></blockquote>

<!-- more -->


<h2>How Property Animation Differs from View Animation</h2>

<p>首先先說明一下這兩者的差別</p>

<p>在過去 View Animation 只能夠對繼承 View 類別的物件進行屬性變化，而且還有一個致命的缺點就是 View Animation 其實只是改變 View 繪圖的座標，並非實際改變 View 類別本身，這就會發生一個 Button 被移動後，觸發 Click 事件的座標卻還留在原地的情況。</p>

<h2>Property Animation</h2>

<p>A property animation changes a property&rsquo;s (a field in an object) value over a specified length of time.</p>

<ul>
<li>Duration (屬性變化時間總長)</li>
<li>Time interpolation  (屬性變化函數)</li>
<li>Repeat count and behavior</li>
<li>Animator sets</li>
<li>Frame refresh delay</li>
</ul>


<h2>How Property Animation Works</h2>

<p>Property Animation 的運作方式就是使用 ValueAnimator 這個類別，給予物件動畫開始時和結束時的屬性值以及整個動畫經過的 Duration</p>

<p>當你呼叫 ValueAnimator.start() 就會讓動畫開始，物件的屬性會藉由內部的 Interpolator 隨著妳設定的 Duration 進行改變 (預設是線性變化)</p>

<h2>API Overview</h2>

<p>你可以在 <a target="_blank" href="http://developer.android.com/intl/zh-tw/reference/android/animation/package-summary.html">android.animation</a> 這個 package 下找到大部分的 Property Animation 的類別，不過在 Interpolator 的部分則是大多與過去的 <a target="_blank" href="http://developer.android.com/intl/zh-tw/reference/android/view/animation/package-summary.html">View Animation</a> 共用</p>

<p>在 Property Animation 中，主要的 API 有下列幾項</p>

<ul>
<li><p>Animator</p>

<ul>
<li>ValueAnimator</li>
<li>ObjectAnimator</li>
<li>AnimatorSet</li>
</ul>
</li>
<li><p>Evaluators</p></li>
<li><p>Interpolators</p></li>
</ul>


<h2>View Property &amp; Quick Example</h2>

<p>Android 當中的 View 有許多屬性可以直接進行動畫</p>

<ul>
<li>View.ALPHA</li>
<li>View.ROTATION</li>
<li>View.ROTATION_X</li>
<li>View.ROTATION_Y</li>
<li>View.SCALE_X</li>
<li>View.SCALE_Y</li>
<li>View.TRANSLATION_X</li>
<li>View.TRANSLATION_Y</li>
<li>View.TRANSLATION_Z (After API Level 21)</li>
<li>View.X</li>
<li>View.Y</li>
<li>View.Z (After API Level 21)</li>
</ul>


<p>下面是一個動畫的例子</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PropertyValuesHolder</span> <span class="n">pvhX</span> <span class="o">=</span> <span class="n">PropertyValuesHolder</span><span class="o">.</span><span class="na">ofFloat</span><span class="o">(</span><span class="n">View</span><span class="o">.</span><span class="na">X</span><span class="o">,</span> <span class="mi">50</span><span class="n">f</span><span class="o">);</span>
</span><span class='line'><span class="n">PropertyValuesHolder</span> <span class="n">pvhY</span> <span class="o">=</span> <span class="n">PropertyValuesHolder</span><span class="o">.</span><span class="na">ofFloat</span><span class="o">(</span><span class="n">View</span><span class="o">.</span><span class="na">Y</span><span class="o">,</span> <span class="mi">100</span><span class="n">f</span><span class="o">);</span>
</span><span class='line'><span class="n">ObjectAnimator</span> <span class="n">anim</span> <span class="o">=</span> <span class="n">ObjectAnimator</span><span class="o">.</span><span class="na">ofPropertyValuesHolder</span><span class="o">(</span><span class="n">mTextView</span><span class="o">,</span> <span class="n">pvhX</span><span class="o">,</span> <span class="n">pvhY</span><span class="o">);&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">anim</span><span class="o">.</span><span class="na">setDuration</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span>
</span><span class='line'><span class="n">anim</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>更多實際的例子可以參考我的 Github Repositry: <a href="https://github.com/kurorido/Android-Animation-Example">Android Animation Example</a> 快速了解每一種動畫效果</p>

<h2>Animation Listeners</h2>

<p>在 Animation 的開始、進行、結束上，可以註冊 Listener 來進行額外操作</p>

<ul>
<li>Animator.AnimatorListener

<ul>
<li>onAnimationStart() - Called when the animation starts.</li>
<li>onAnimationEnd() - Called when the animation ends.</li>
<li>onAnimationRepeat() - Called when the animation repeats itself.</li>
<li>onAnimationCancel() - Called when the animation is canceled. A cancelled animation also calls</li>
<li>onAnimationEnd(), regardless of how they were ended.</li>
</ul>
</li>
</ul>


<p>甚至是任何的 Value Update 都能夠客製化</p>

<ul>
<li>ValueAnimator.AnimatorUpdateListener

<ul>
<li>onAnimationUpdate()</li>
</ul>
</li>
</ul>


<h2>XML Directory - Animator? Animation?</h2>

<p>為了要跟 View Animation 區別，新的 Property Animation 是放在 /res/animator/ 資料夾底下，過去的 View Animation 則是放在 /res/anim 底下</p>

<p>關於如何用 XML 動畫可以參考 <a target="_blank" href="http://developer.android.com/intl/zh-tw/guide/topics/resources/animation-resource.html#Property">Android Animation Resource</a></p>
]]></content>
  </entry>
  
</feed>

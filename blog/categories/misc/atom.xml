<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Misc | Roliroli's Blog - Creative thinking is useless unless you know how to sell it]]></title>
  <link href="http://kurorido.github.io/blog/categories/misc/atom.xml" rel="self"/>
  <link href="http://kurorido.github.io/"/>
  <updated>2016-04-13T21:57:42+08:00</updated>
  <id>http://kurorido.github.io/</id>
  <author>
    <name><![CDATA[kuroridoplayer@gmail.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use Open_jtalk on Ubuntu 14.04]]></title>
    <link href="http://kurorido.github.io/blog/2016/04/13/use-open-jtalk-on-ubuntu-14-dot-04/"/>
    <updated>2016-04-13T20:44:24+08:00</updated>
    <id>http://kurorido.github.io/blog/2016/04/13/use-open-jtalk-on-ubuntu-14-dot-04</id>
    <content type="html"><![CDATA[<p>Open Jtalk 是一套可以把日文文字用電腦唸出來的軟體工具(Japanese text-to-speech system)</p>

<p><a href="http://open-jtalk.sourceforge.net/" refl="nofollow" target="_blank">官網</a>上並沒有文件說明要如何安裝，所以只得自己研究</p>

<!-- more -->


<p>在 Ubuntu 下最容易的安裝方法是透過 apt-get</p>

<pre><code>sudo apt-add-repository ppa:openhri/ppa
sudo aptitude update
sudo aptitude install open-jtalk
</code></pre>

<p>安裝完後就可以直接使用 open_jtalk 指令</p>

<pre><code>$ open_jtalk
The Japanese TTS System "Open JTalk"
Version 1.07 (http://open-jtalk.sourceforge.net/)
Copyright (C) 2008-2013 Nagoya Institute of Technology
All rights reserved.
</code></pre>

<p>要使用 open_jtalk 還需要聲音檔跟字典檔 (open_jtalk_dic_utf_8-1.09)</p>

<p>字典的部份可以在官網上下載到，至於聲音檔則是可以透過 apt-get 安裝</p>

<pre><code>sudo apt-get install hts-voice-nitech-jp-atr503-m001
</code></pre>

<p>最後會安裝在 /usr/share/hts-voice/ 底下</p>

<p>接下來讓我們實際使用看看</p>

<pre><code>echo "電気をつけてみました" | open_jtalk -m /usr/share/hts-voice/nitech-jp-atr503-m001/nitech_jp_atr503_m001.htsvoice -ow output.wav -x open_jtalk_dic_utf_8-1.09
</code></pre>

<p>上面的指令會輸出 output.wav ，用可以解碼 wav 的軟體就能夠聽到結果。</p>

<p><audio controls>
  <source src="http://kurorido.github.io/downloads/open_jtalk_sample/man.wav" type="audio/wav">
  Your browser does not support the audio tag.
</audio></p>

<p>透過這樣使用的 open_jtalk 是1.07版本，但此時最新的是 1.09，如果有需要也可以自己抓原始碼自行編譯</p>

<p>要注意的是，自行編譯的話需要也需要自行編譯 hts_engine</p>

<p>下面很簡短的說明如何編譯
<code>
$ cd hts_engine_API-1.10
$ ./configure
$ make
$ cd ..
$ cd open_jtalk-1.09
$ ./configure --with-hts-engine-header-path=hts_engine_API-1.10/include --with-hts-engine-library-path=hts_engine_API-1.10/lib --with-charset=utf-8
$ make
</code>
不過身為一個宅宅工程師，當然是希望可以聽到女生的聲音</p>

<p>幸好有人製作出了這樣的聲音檔，可以在 MMDAgent 這個計畫中找到一個取名為 mei 的女性的聲音</p>

<p>這邊我們下載 MMDAgent &ldquo;Sample Script&rdquo; version 1.6 這個連結，在裡面的 VOICE/mei/ 資料夾中有著許多 htsvoice ，分別代表不同的語氣</p>

<p>這邊展示一個範例</p>

<p><audio controls>
  <source src="http://kurorido.github.io/downloads/open_jtalk_sample/mei.wav" type="audio/wav">
  Your browser does not support the audio tag.
</audio></p>

<p>實際使用過後就會覺得還是女生的聲音比較好</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[建立自己的第一個 Github Page]]></title>
    <link href="http://kurorido.github.io/blog/2016/03/23/create-my-first-github-page/"/>
    <updated>2016-03-23T00:54:15+08:00</updated>
    <id>http://kurorido.github.io/blog/2016/03/23/create-my-first-github-page</id>
    <content type="html"><![CDATA[<p>研究了主要兩種 Solution, 第一種是 jekyll 另外一種是基於 jekyll 的框架 Octpress。</p>

<p>兩者架起來都不難，但是 jekyll 的初始版本比較陽春，octpress 則會先包好一些第三方的套件 (尤其是社交以及追蹤分析的部分)</p>

<!-- more -->


<p>octpress 比較難找到 theme 可以套，但是 jekyll 比較多，不過套別人現成 theme 也是很困難的一件事情&hellip;改用 octpress 就是因為套 theme 不順利</p>

<p>總之有一個有 code block 的 blog 而且好客製化是第一步&hellip;</p>

<p>各種 blog function 測試</p>

<hr />

<p><a href="https://www.google.com" title="Google's Homepage">I&rsquo;m an inline-style link with title</a></p>

<blockquote><p>Blockquotes are very handy in email to emulate reply text.
This line is part of the same quote.</p></blockquote>

<p><blockquote><p>Last night I lay in bed looking up at the stars in the sky and I thought to myself, where the heck is the ceiling.</p></blockquote></p>

<p><figure class='code'><figcaption><span> (test.js)</span> <a href='/downloads/code/test.js'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">sample javascript from xui</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="kc">undefined</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">xui</span><span class="p">,</span>
</span><span class='line'>    <span class="nb">window</span>     <span class="o">=</span> <span class="k">this</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">string</span>     <span class="o">=</span> <span class="k">new</span> <span class="nb">String</span><span class="p">(</span><span class="s1">&#39;string&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nb">document</span>   <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nb">document</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">simpleExpr</span> <span class="o">=</span> <span class="sr">/^#?([\w-]+)$/</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">idExpr</span>     <span class="o">=</span> <span class="sr">/^#/</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">tagExpr</span>    <span class="o">=</span> <span class="sr">/&lt;([\w:]+)/</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">slice</span>      <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="p">};</span>
</span><span class='line'>    <span class="k">try</span> <span class="p">{</span> <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nx">slice</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">nodeType</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span> <span class="nx">slice</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span> <span class="kd">var</span> <span class="nx">ret</span><span class="o">=</span><span class="p">[];</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">ret</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span> <span class="k">return</span> <span class="nx">ret</span><span class="p">;</span> <span class="p">};</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">x$</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">xui</span> <span class="o">=</span> <span class="nx">xui</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span> <span class="nx">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="nx">xui</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span> <span class="nx">context</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></p>

<ul>
<li><p>Java Code Block
<figure class='code'><figcaption><span>java </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>  <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="n">mTextView</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">target_text</span><span class="o">);</span>
</span><span class='line'>  <span class="n">mButton</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">action_button</span><span class="o">);&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="n">mButton</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">startAnimation</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">});</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></p></li>
<li><p>PHP Code block
<figure class='code'><figcaption><span>php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$keywords</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'><span class="nv">$links</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'><span class="k">foreach</span><span class="p">(</span><span class="nv">$keywordLinks</span> <span class="k">as</span> <span class="nv">$keywordLink</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nv">$keyword</span> <span class="o">=</span> <span class="nv">$keywordLink</span><span class="o">-&gt;</span><span class="na">keyword</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$link</span> <span class="o">=</span> <span class="nv">$keywordLink</span><span class="o">-&gt;</span><span class="na">link</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$target</span> <span class="o">=</span> <span class="nv">$keywordLink</span><span class="o">-&gt;</span><span class="na">target</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$keywords</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$keyword</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$links</span><span class="p">[]</span> <span class="o">=</span> <span class="nx">\Html</span><span class="o">::</span><span class="na">link</span><span class="p">(</span><span class="nv">$link</span><span class="p">,</span> <span class="nv">$keyword</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">target</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span> <span class="o">=&gt;</span> <span class="nv">$target</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">class</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span> <span class="o">=&gt;</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">blog</span><span class="o">-</span><span class="nx">keyword</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p></li>
</ul>

]]></content>
  </entry>
  
</feed>
